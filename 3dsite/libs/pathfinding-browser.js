!function(e){if("object"==typeof exports)module.exports=e();else if("function"==typeof define&&define.amd)define(e);else{var f;"undefined"!=typeof window?f=window:"undefined"!=typeof global?f=global:"undefined"!=typeof self&&(f=self),f.PF=e()}}(function(){return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a="function"==typeof require&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n||e)},f,f.exports,e,t,n,r)}return n[o].exports}for(var i="function"==typeof require&&require,o=0;o<r.length;o++)s(r[o]);return s}({1:[function(_dereq_,module,exports){module.exports=_dereq_("./lib/heap")},{"./lib/heap":2}],2:[function(_dereq_,module,exports){(function(){var Heap,defaultCmp,floor,heapify,heappop,heappush,heappushpop,heapreplace,insort,min,nlargest,nsmallest,updateItem,_siftdown,_siftup;floor=Math.floor,min=Math.min,defaultCmp=function(x,y){return x<y?-1:x>y?1:0},insort=function(a,x,lo,hi,cmp){var mid;if(null==lo&&(lo=0),null==cmp&&(cmp=defaultCmp),lo<0)throw new Error("lo must be non-negative");for(null==hi&&(hi=a.length);lo<hi;)cmp(x,a[mid=floor((lo+hi)/2)])<0?hi=mid:lo=mid+1;return[].splice.apply(a,[lo,lo-lo].concat(x)),x},heappush=function(array,item,cmp){return null==cmp&&(cmp=defaultCmp),array.push(item),_siftdown(array,0,array.length-1,cmp)},heappop=function(array,cmp){var lastelt,returnitem;return null==cmp&&(cmp=defaultCmp),lastelt=array.pop(),array.length?(returnitem=array[0],array[0]=lastelt,_siftup(array,0,cmp)):returnitem=lastelt,returnitem},heapreplace=function(array,item,cmp){var returnitem;return null==cmp&&(cmp=defaultCmp),returnitem=array[0],array[0]=item,_siftup(array,0,cmp),returnitem},heappushpop=function(array,item,cmp){var _ref;return null==cmp&&(cmp=defaultCmp),array.length&&cmp(array[0],item)<0&&(item=(_ref=[array[0],item])[0],array[0]=_ref[1],_siftup(array,0,cmp)),item},heapify=function(array,cmp){var i,_i,_len,_ref1,_results,_results1;for(null==cmp&&(cmp=defaultCmp),_results=[],_i=0,_len=(_ref1=function(){_results1=[];for(var _j=0,_ref=floor(array.length/2);0<=_ref?_j<_ref:_j>_ref;0<=_ref?_j++:_j--)_results1.push(_j);return _results1}.apply(this).reverse()).length;_i<_len;_i++)i=_ref1[_i],_results.push(_siftup(array,i,cmp));return _results},updateItem=function(array,item,cmp){var pos;if(null==cmp&&(cmp=defaultCmp),-1!==(pos=array.indexOf(item)))return _siftdown(array,0,pos,cmp),_siftup(array,pos,cmp)},nlargest=function(array,n,cmp){var elem,result,_i,_len,_ref;if(null==cmp&&(cmp=defaultCmp),!(result=array.slice(0,n)).length)return result;for(heapify(result,cmp),_i=0,_len=(_ref=array.slice(n)).length;_i<_len;_i++)elem=_ref[_i],heappushpop(result,elem,cmp);return result.sort(cmp).reverse()},nsmallest=function(array,n,cmp){var elem,los,result,_i,_j,_len,_ref,_ref1,_results;if(null==cmp&&(cmp=defaultCmp),10*n<=array.length){if(!(result=array.slice(0,n).sort(cmp)).length)return result;for(los=result[result.length-1],_i=0,_len=(_ref=array.slice(n)).length;_i<_len;_i++)cmp(elem=_ref[_i],los)<0&&(insort(result,elem,0,null,cmp),result.pop(),los=result[result.length-1]);return result}for(heapify(array,cmp),_results=[],_j=0,_ref1=min(n,array.length);0<=_ref1?_j<_ref1:_j>_ref1;0<=_ref1?++_j:--_j)_results.push(heappop(array,cmp));return _results},_siftdown=function(array,startpos,pos,cmp){var newitem,parent,parentpos;for(null==cmp&&(cmp=defaultCmp),newitem=array[pos];pos>startpos&&cmp(newitem,parent=array[parentpos=pos-1>>1])<0;)array[pos]=parent,pos=parentpos;return array[pos]=newitem},_siftup=function(array,pos,cmp){var childpos,endpos,newitem,rightpos,startpos;for(null==cmp&&(cmp=defaultCmp),endpos=array.length,startpos=pos,newitem=array[pos],childpos=2*pos+1;childpos<endpos;)(rightpos=childpos+1)<endpos&&!(cmp(array[childpos],array[rightpos])<0)&&(childpos=rightpos),array[pos]=array[childpos],childpos=2*(pos=childpos)+1;return array[pos]=newitem,_siftdown(array,startpos,pos,cmp)},Heap=function(){function Heap(cmp){this.cmp=null!=cmp?cmp:defaultCmp,this.nodes=[]}return Heap.push=heappush,Heap.pop=heappop,Heap.replace=heapreplace,Heap.pushpop=heappushpop,Heap.heapify=heapify,Heap.updateItem=updateItem,Heap.nlargest=nlargest,Heap.nsmallest=nsmallest,Heap.prototype.push=function(x){return heappush(this.nodes,x,this.cmp)},Heap.prototype.pop=function(){return heappop(this.nodes,this.cmp)},Heap.prototype.peek=function(){return this.nodes[0]},Heap.prototype.contains=function(x){return-1!==this.nodes.indexOf(x)},Heap.prototype.replace=function(x){return heapreplace(this.nodes,x,this.cmp)},Heap.prototype.pushpop=function(x){return heappushpop(this.nodes,x,this.cmp)},Heap.prototype.heapify=function(){return heapify(this.nodes,this.cmp)},Heap.prototype.updateItem=function(x){return updateItem(this.nodes,x,this.cmp)},Heap.prototype.clear=function(){return this.nodes=[]},Heap.prototype.empty=function(){return 0===this.nodes.length},Heap.prototype.size=function(){return this.nodes.length},Heap.prototype.clone=function(){var heap;return(heap=new Heap).nodes=this.nodes.slice(0),heap},Heap.prototype.toArray=function(){return this.nodes.slice(0)},Heap.prototype.insert=Heap.prototype.push,Heap.prototype.top=Heap.prototype.peek,Heap.prototype.front=Heap.prototype.peek,Heap.prototype.has=Heap.prototype.contains,Heap.prototype.copy=Heap.prototype.clone,Heap}(),(null!=module?module.exports:void 0)?module.exports=Heap:window.Heap=Heap}).call(this)},{}],3:[function(_dereq_,module,exports){module.exports={Always:1,Never:2,IfAtMostOneObstacle:3,OnlyWhenNoObstacles:4}},{}],4:[function(_dereq_,module,exports){var Node=_dereq_("./Node"),DiagonalMovement=_dereq_("./DiagonalMovement");function Grid(width_or_matrix,height,matrix){var width;"object"!=typeof width_or_matrix?width=width_or_matrix:(height=width_or_matrix.length,width=width_or_matrix[0].length,matrix=width_or_matrix),this.width=width,this.height=height,this.nodes=this._buildNodes(width,height,matrix)}Grid.prototype._buildNodes=function(width,height,matrix){var i,j,nodes=new Array(height);for(i=0;i<height;++i)for(nodes[i]=new Array(width),j=0;j<width;++j)nodes[i][j]=new Node(j,i);if(void 0===matrix)return nodes;if(matrix.length!==height||matrix[0].length!==width)throw new Error("Matrix size does not fit");for(i=0;i<height;++i)for(j=0;j<width;++j)matrix[i][j]&&(nodes[i][j].walkable=!1);return nodes},Grid.prototype.getNodeAt=function(x,y){return this.nodes[y][x]},Grid.prototype.isWalkableAt=function(x,y){return this.isInside(x,y)&&this.nodes[y][x].walkable},Grid.prototype.isInside=function(x,y){return x>=0&&x<this.width&&y>=0&&y<this.height},Grid.prototype.setWalkableAt=function(x,y,walkable){this.nodes[y][x].walkable=walkable},Grid.prototype.getNeighbors=function(node,diagonalMovement){var x=node.x,y=node.y,neighbors=[],s0=!1,d0=!1,s1=!1,d1=!1,s2=!1,d2=!1,s3=!1,d3=!1,nodes=this.nodes;if(this.isWalkableAt(x,y-1)&&(neighbors.push(nodes[y-1][x]),s0=!0),this.isWalkableAt(x+1,y)&&(neighbors.push(nodes[y][x+1]),s1=!0),this.isWalkableAt(x,y+1)&&(neighbors.push(nodes[y+1][x]),s2=!0),this.isWalkableAt(x-1,y)&&(neighbors.push(nodes[y][x-1]),s3=!0),diagonalMovement===DiagonalMovement.Never)return neighbors;if(diagonalMovement===DiagonalMovement.OnlyWhenNoObstacles)d0=s3&&s0,d1=s0&&s1,d2=s1&&s2,d3=s2&&s3;else if(diagonalMovement===DiagonalMovement.IfAtMostOneObstacle)d0=s3||s0,d1=s0||s1,d2=s1||s2,d3=s2||s3;else{if(diagonalMovement!==DiagonalMovement.Always)throw new Error("Incorrect value of diagonalMovement");d0=!0,d1=!0,d2=!0,d3=!0}return d0&&this.isWalkableAt(x-1,y-1)&&neighbors.push(nodes[y-1][x-1]),d1&&this.isWalkableAt(x+1,y-1)&&neighbors.push(nodes[y-1][x+1]),d2&&this.isWalkableAt(x+1,y+1)&&neighbors.push(nodes[y+1][x+1]),d3&&this.isWalkableAt(x-1,y+1)&&neighbors.push(nodes[y+1][x-1]),neighbors},Grid.prototype.clone=function(){var i,j,width=this.width,height=this.height,thisNodes=this.nodes,newGrid=new Grid(width,height),newNodes=new Array(height);for(i=0;i<height;++i)for(newNodes[i]=new Array(width),j=0;j<width;++j)newNodes[i][j]=new Node(j,i,thisNodes[i][j].walkable);return newGrid.nodes=newNodes,newGrid},module.exports=Grid},{"./DiagonalMovement":3,"./Node":6}],5:[function(_dereq_,module,exports){module.exports={manhattan:function(dx,dy){return dx+dy},euclidean:function(dx,dy){return Math.sqrt(dx*dx+dy*dy)},octile:function(dx,dy){var F=Math.SQRT2-1;return dx<dy?F*dx+dy:F*dy+dx},chebyshev:function(dx,dy){return Math.max(dx,dy)}}},{}],6:[function(_dereq_,module,exports){module.exports=function(x,y,walkable){this.x=x,this.y=y,this.walkable=void 0===walkable||walkable}},{}],7:[function(_dereq_,module,exports){function backtrace(node){for(var path=[[node.x,node.y]];node.parent;)node=node.parent,path.push([node.x,node.y]);return path.reverse()}function interpolate(x0,y0,x1,y1){var sx,sy,dx,dy,err,e2,abs=Math.abs,line=[];for(sx=x0<x1?1:-1,sy=y0<y1?1:-1,err=(dx=abs(x1-x0))-(dy=abs(y1-y0));line.push([x0,y0]),x0!==x1||y0!==y1;)(e2=2*err)>-dy&&(err-=dy,x0+=sx),e2<dx&&(err+=dx,y0+=sy);return line}exports.backtrace=backtrace,exports.biBacktrace=function(nodeA,nodeB){var pathA=backtrace(nodeA),pathB=backtrace(nodeB);return pathA.concat(pathB.reverse())},exports.pathLength=function(path){var i,a,b,dx,dy,sum=0;for(i=1;i<path.length;++i)a=path[i-1],b=path[i],dx=a[0]-b[0],dy=a[1]-b[1],sum+=Math.sqrt(dx*dx+dy*dy);return sum},exports.interpolate=interpolate,exports.expandPath=function(path){var coord0,coord1,interpolated,interpolatedLen,i,j,expanded=[],len=path.length;if(len<2)return expanded;for(i=0;i<len-1;++i)for(coord0=path[i],coord1=path[i+1],interpolatedLen=(interpolated=interpolate(coord0[0],coord0[1],coord1[0],coord1[1])).length,j=0;j<interpolatedLen-1;++j)expanded.push(interpolated[j]);return expanded.push(path[len-1]),expanded},exports.smoothenPath=function(grid,path){var sx,sy,newPath,i,j,coord,line,testCoord,blocked,len=path.length,x0=path[0][0],y0=path[0][1],x1=path[len-1][0],y1=path[len-1][1];for(newPath=[[sx=x0,sy=y0]],i=2;i<len;++i){for(line=interpolate(sx,sy,(coord=path[i])[0],coord[1]),blocked=!1,j=1;j<line.length;++j)if(testCoord=line[j],!grid.isWalkableAt(testCoord[0],testCoord[1])){blocked=!0;break}blocked&&(lastValidCoord=path[i-1],newPath.push(lastValidCoord),sx=lastValidCoord[0],sy=lastValidCoord[1])}return newPath.push([x1,y1]),newPath},exports.compressPath=function(path){if(path.length<3)return path;var lx,ly,ldx,ldy,sq,i,compressed=[],sx=path[0][0],sy=path[0][1],px=path[1][0],py=path[1][1],dx=px-sx,dy=py-sy;for(dx/=sq=Math.sqrt(dx*dx+dy*dy),dy/=sq,compressed.push([sx,sy]),i=2;i<path.length;i++)lx=px,ly=py,ldx=dx,ldy=dy,dx=(px=path[i][0])-lx,dy=(py=path[i][1])-ly,dy/=sq=Math.sqrt(dx*dx+dy*dy),(dx/=sq)===ldx&&dy===ldy||compressed.push([lx,ly]);return compressed.push([px,py]),compressed}},{}],8:[function(_dereq_,module,exports){module.exports={Heap:_dereq_("heap"),Node:_dereq_("./core/Node"),Grid:_dereq_("./core/Grid"),Util:_dereq_("./core/Util"),DiagonalMovement:_dereq_("./core/DiagonalMovement"),Heuristic:_dereq_("./core/Heuristic"),AStarFinder:_dereq_("./finders/AStarFinder"),BestFirstFinder:_dereq_("./finders/BestFirstFinder"),BreadthFirstFinder:_dereq_("./finders/BreadthFirstFinder"),DijkstraFinder:_dereq_("./finders/DijkstraFinder"),BiAStarFinder:_dereq_("./finders/BiAStarFinder"),BiBestFirstFinder:_dereq_("./finders/BiBestFirstFinder"),BiBreadthFirstFinder:_dereq_("./finders/BiBreadthFirstFinder"),BiDijkstraFinder:_dereq_("./finders/BiDijkstraFinder"),IDAStarFinder:_dereq_("./finders/IDAStarFinder"),JumpPointFinder:_dereq_("./finders/JumpPointFinder")}},{"./core/DiagonalMovement":3,"./core/Grid":4,"./core/Heuristic":5,"./core/Node":6,"./core/Util":7,"./finders/AStarFinder":9,"./finders/BestFirstFinder":10,"./finders/BiAStarFinder":11,"./finders/BiBestFirstFinder":12,"./finders/BiBreadthFirstFinder":13,"./finders/BiDijkstraFinder":14,"./finders/BreadthFirstFinder":15,"./finders/DijkstraFinder":16,"./finders/IDAStarFinder":17,"./finders/JumpPointFinder":22,heap:1}],9:[function(_dereq_,module,exports){var Heap=_dereq_("heap"),Util=_dereq_("../core/Util"),Heuristic=_dereq_("../core/Heuristic"),DiagonalMovement=_dereq_("../core/DiagonalMovement");function AStarFinder(opt){opt=opt||{},this.allowDiagonal=opt.allowDiagonal,this.dontCrossCorners=opt.dontCrossCorners,this.heuristic=opt.heuristic||Heuristic.manhattan,this.weight=opt.weight||1,this.diagonalMovement=opt.diagonalMovement,this.diagonalMovement||(this.allowDiagonal?this.dontCrossCorners?this.diagonalMovement=DiagonalMovement.OnlyWhenNoObstacles:this.diagonalMovement=DiagonalMovement.IfAtMostOneObstacle:this.diagonalMovement=DiagonalMovement.Never),this.diagonalMovement===DiagonalMovement.Never?this.heuristic=opt.heuristic||Heuristic.manhattan:this.heuristic=opt.heuristic||Heuristic.octile}AStarFinder.prototype.findPath=function(startX,startY,endX,endY,grid){var node,neighbors,neighbor,i,l,x,y,ng,openList=new Heap(function(nodeA,nodeB){return nodeA.f-nodeB.f}),startNode=grid.getNodeAt(startX,startY),endNode=grid.getNodeAt(endX,endY),heuristic=this.heuristic,diagonalMovement=this.diagonalMovement,weight=this.weight,abs=Math.abs,SQRT2=Math.SQRT2;for(startNode.g=0,startNode.f=0,openList.push(startNode),startNode.opened=!0;!openList.empty();){if((node=openList.pop()).closed=!0,node===endNode)return Util.backtrace(endNode);for(i=0,l=(neighbors=grid.getNeighbors(node,diagonalMovement)).length;i<l;++i)(neighbor=neighbors[i]).closed||(x=neighbor.x,y=neighbor.y,ng=node.g+(x-node.x==0||y-node.y==0?1:SQRT2),(!neighbor.opened||ng<neighbor.g)&&(neighbor.g=ng,neighbor.h=neighbor.h||weight*heuristic(abs(x-endX),abs(y-endY)),neighbor.f=neighbor.g+neighbor.h,neighbor.parent=node,neighbor.opened?openList.updateItem(neighbor):(openList.push(neighbor),neighbor.opened=!0)))}return[]},module.exports=AStarFinder},{"../core/DiagonalMovement":3,"../core/Heuristic":5,"../core/Util":7,heap:1}],10:[function(_dereq_,module,exports){var AStarFinder=_dereq_("./AStarFinder");function BestFirstFinder(opt){AStarFinder.call(this,opt);var orig=this.heuristic;this.heuristic=function(dx,dy){return 1e6*orig(dx,dy)}}BestFirstFinder.prototype=new AStarFinder,BestFirstFinder.prototype.constructor=BestFirstFinder,module.exports=BestFirstFinder},{"./AStarFinder":9}],11:[function(_dereq_,module,exports){var Heap=_dereq_("heap"),Util=_dereq_("../core/Util"),Heuristic=_dereq_("../core/Heuristic"),DiagonalMovement=_dereq_("../core/DiagonalMovement");function BiAStarFinder(opt){opt=opt||{},this.allowDiagonal=opt.allowDiagonal,this.dontCrossCorners=opt.dontCrossCorners,this.diagonalMovement=opt.diagonalMovement,this.heuristic=opt.heuristic||Heuristic.manhattan,this.weight=opt.weight||1,this.diagonalMovement||(this.allowDiagonal?this.dontCrossCorners?this.diagonalMovement=DiagonalMovement.OnlyWhenNoObstacles:this.diagonalMovement=DiagonalMovement.IfAtMostOneObstacle:this.diagonalMovement=DiagonalMovement.Never),this.diagonalMovement===DiagonalMovement.Never?this.heuristic=opt.heuristic||Heuristic.manhattan:this.heuristic=opt.heuristic||Heuristic.octile}BiAStarFinder.prototype.findPath=function(startX,startY,endX,endY,grid){var node,neighbors,neighbor,i,l,x,y,ng,cmp=function(nodeA,nodeB){return nodeA.f-nodeB.f},startOpenList=new Heap(cmp),endOpenList=new Heap(cmp),startNode=grid.getNodeAt(startX,startY),endNode=grid.getNodeAt(endX,endY),heuristic=this.heuristic,diagonalMovement=this.diagonalMovement,weight=this.weight,abs=Math.abs,SQRT2=Math.SQRT2;for(startNode.g=0,startNode.f=0,startOpenList.push(startNode),startNode.opened=1,endNode.g=0,endNode.f=0,endOpenList.push(endNode),endNode.opened=2;!startOpenList.empty()&&!endOpenList.empty();){for((node=startOpenList.pop()).closed=!0,i=0,l=(neighbors=grid.getNeighbors(node,diagonalMovement)).length;i<l;++i)if(!(neighbor=neighbors[i]).closed){if(2===neighbor.opened)return Util.biBacktrace(node,neighbor);x=neighbor.x,y=neighbor.y,ng=node.g+(x-node.x==0||y-node.y==0?1:SQRT2),(!neighbor.opened||ng<neighbor.g)&&(neighbor.g=ng,neighbor.h=neighbor.h||weight*heuristic(abs(x-endX),abs(y-endY)),neighbor.f=neighbor.g+neighbor.h,neighbor.parent=node,neighbor.opened?startOpenList.updateItem(neighbor):(startOpenList.push(neighbor),neighbor.opened=1))}for((node=endOpenList.pop()).closed=!0,i=0,l=(neighbors=grid.getNeighbors(node,diagonalMovement)).length;i<l;++i)if(!(neighbor=neighbors[i]).closed){if(1===neighbor.opened)return Util.biBacktrace(neighbor,node);x=neighbor.x,y=neighbor.y,ng=node.g+(x-node.x==0||y-node.y==0?1:SQRT2),(!neighbor.opened||ng<neighbor.g)&&(neighbor.g=ng,neighbor.h=neighbor.h||weight*heuristic(abs(x-startX),abs(y-startY)),neighbor.f=neighbor.g+neighbor.h,neighbor.parent=node,neighbor.opened?endOpenList.updateItem(neighbor):(endOpenList.push(neighbor),neighbor.opened=2))}}return[]},module.exports=BiAStarFinder},{"../core/DiagonalMovement":3,"../core/Heuristic":5,"../core/Util":7,heap:1}],12:[function(_dereq_,module,exports){var BiAStarFinder=_dereq_("./BiAStarFinder");function BiBestFirstFinder(opt){BiAStarFinder.call(this,opt);var orig=this.heuristic;this.heuristic=function(dx,dy){return 1e6*orig(dx,dy)}}BiBestFirstFinder.prototype=new BiAStarFinder,BiBestFirstFinder.prototype.constructor=BiBestFirstFinder,module.exports=BiBestFirstFinder},{"./BiAStarFinder":11}],13:[function(_dereq_,module,exports){var Util=_dereq_("../core/Util"),DiagonalMovement=_dereq_("../core/DiagonalMovement");function BiBreadthFirstFinder(opt){opt=opt||{},this.allowDiagonal=opt.allowDiagonal,this.dontCrossCorners=opt.dontCrossCorners,this.diagonalMovement=opt.diagonalMovement,this.diagonalMovement||(this.allowDiagonal?this.dontCrossCorners?this.diagonalMovement=DiagonalMovement.OnlyWhenNoObstacles:this.diagonalMovement=DiagonalMovement.IfAtMostOneObstacle:this.diagonalMovement=DiagonalMovement.Never)}BiBreadthFirstFinder.prototype.findPath=function(startX,startY,endX,endY,grid){var neighbors,neighbor,node,i,l,startNode=grid.getNodeAt(startX,startY),endNode=grid.getNodeAt(endX,endY),startOpenList=[],endOpenList=[],diagonalMovement=this.diagonalMovement;for(startOpenList.push(startNode),startNode.opened=!0,startNode.by=0,endOpenList.push(endNode),endNode.opened=!0,endNode.by=1;startOpenList.length&&endOpenList.length;){for((node=startOpenList.shift()).closed=!0,i=0,l=(neighbors=grid.getNeighbors(node,diagonalMovement)).length;i<l;++i)if(!(neighbor=neighbors[i]).closed)if(neighbor.opened){if(1===neighbor.by)return Util.biBacktrace(node,neighbor)}else startOpenList.push(neighbor),neighbor.parent=node,neighbor.opened=!0,neighbor.by=0;for((node=endOpenList.shift()).closed=!0,i=0,l=(neighbors=grid.getNeighbors(node,diagonalMovement)).length;i<l;++i)if(!(neighbor=neighbors[i]).closed)if(neighbor.opened){if(0===neighbor.by)return Util.biBacktrace(neighbor,node)}else endOpenList.push(neighbor),neighbor.parent=node,neighbor.opened=!0,neighbor.by=1}return[]},module.exports=BiBreadthFirstFinder},{"../core/DiagonalMovement":3,"../core/Util":7}],14:[function(_dereq_,module,exports){var BiAStarFinder=_dereq_("./BiAStarFinder");function BiDijkstraFinder(opt){BiAStarFinder.call(this,opt),this.heuristic=function(dx,dy){return 0}}BiDijkstraFinder.prototype=new BiAStarFinder,BiDijkstraFinder.prototype.constructor=BiDijkstraFinder,module.exports=BiDijkstraFinder},{"./BiAStarFinder":11}],15:[function(_dereq_,module,exports){var Util=_dereq_("../core/Util"),DiagonalMovement=_dereq_("../core/DiagonalMovement");function BreadthFirstFinder(opt){opt=opt||{},this.allowDiagonal=opt.allowDiagonal,this.dontCrossCorners=opt.dontCrossCorners,this.diagonalMovement=opt.diagonalMovement,this.diagonalMovement||(this.allowDiagonal?this.dontCrossCorners?this.diagonalMovement=DiagonalMovement.OnlyWhenNoObstacles:this.diagonalMovement=DiagonalMovement.IfAtMostOneObstacle:this.diagonalMovement=DiagonalMovement.Never)}BreadthFirstFinder.prototype.findPath=function(startX,startY,endX,endY,grid){var neighbors,neighbor,node,i,l,openList=[],diagonalMovement=this.diagonalMovement,startNode=grid.getNodeAt(startX,startY),endNode=grid.getNodeAt(endX,endY);for(openList.push(startNode),startNode.opened=!0;openList.length;){if((node=openList.shift()).closed=!0,node===endNode)return Util.backtrace(endNode);for(i=0,l=(neighbors=grid.getNeighbors(node,diagonalMovement)).length;i<l;++i)(neighbor=neighbors[i]).closed||neighbor.opened||(openList.push(neighbor),neighbor.opened=!0,neighbor.parent=node)}return[]},module.exports=BreadthFirstFinder},{"../core/DiagonalMovement":3,"../core/Util":7}],16:[function(_dereq_,module,exports){var AStarFinder=_dereq_("./AStarFinder");function DijkstraFinder(opt){AStarFinder.call(this,opt),this.heuristic=function(dx,dy){return 0}}DijkstraFinder.prototype=new AStarFinder,DijkstraFinder.prototype.constructor=DijkstraFinder,module.exports=DijkstraFinder},{"./AStarFinder":9}],17:[function(_dereq_,module,exports){_dereq_("../core/Util");var Heuristic=_dereq_("../core/Heuristic"),Node=_dereq_("../core/Node"),DiagonalMovement=_dereq_("../core/DiagonalMovement");function IDAStarFinder(opt){opt=opt||{},this.allowDiagonal=opt.allowDiagonal,this.dontCrossCorners=opt.dontCrossCorners,this.diagonalMovement=opt.diagonalMovement,this.heuristic=opt.heuristic||Heuristic.manhattan,this.weight=opt.weight||1,this.trackRecursion=opt.trackRecursion||!1,this.timeLimit=opt.timeLimit||1/0,this.diagonalMovement||(this.allowDiagonal?this.dontCrossCorners?this.diagonalMovement=DiagonalMovement.OnlyWhenNoObstacles:this.diagonalMovement=DiagonalMovement.IfAtMostOneObstacle:this.diagonalMovement=DiagonalMovement.Never),this.diagonalMovement===DiagonalMovement.Never?this.heuristic=opt.heuristic||Heuristic.manhattan:this.heuristic=opt.heuristic||Heuristic.octile}IDAStarFinder.prototype.findPath=function(startX,startY,endX,endY,grid){var j,route,t,startTime=(new Date).getTime(),h=function(a,b){return this.heuristic(Math.abs(b.x-a.x),Math.abs(b.y-a.y))}.bind(this),search=function(node,g,cutoff,route,depth){if(0,this.timeLimit>0&&(new Date).getTime()-startTime>1e3*this.timeLimit)return 1/0;var min,t,k,neighbour,f=g+h(node,end)*this.weight;if(f>cutoff)return f;if(node==end)return route[depth]=[node.x,node.y],node;var a,b,neighbours=grid.getNeighbors(node,this.diagonalMovement);for(k=0,min=1/0;neighbour=neighbours[k];++k){if(this.trackRecursion&&(neighbour.retainCount=neighbour.retainCount+1||1,!0!==neighbour.tested&&(neighbour.tested=!0)),(t=search(neighbour,g+(b=neighbour,(a=node).x===b.x||a.y===b.y?1:Math.SQRT2),cutoff,route,depth+1))instanceof Node)return route[depth]=[node.x,node.y],t;this.trackRecursion&&0==--neighbour.retainCount&&(neighbour.tested=!1),t<min&&(min=t)}return min}.bind(this),start=grid.getNodeAt(startX,startY),end=grid.getNodeAt(endX,endY),cutOff=h(start,end);for(j=0;;++j){if((t=search(start,0,cutOff,route=[],0))===1/0)return[];if(t instanceof Node)return route;cutOff=t}return[]},module.exports=IDAStarFinder},{"../core/DiagonalMovement":3,"../core/Heuristic":5,"../core/Node":6,"../core/Util":7}],18:[function(_dereq_,module,exports){var JumpPointFinderBase=_dereq_("./JumpPointFinderBase"),DiagonalMovement=_dereq_("../core/DiagonalMovement");function JPFAlwaysMoveDiagonally(opt){JumpPointFinderBase.call(this,opt)}JPFAlwaysMoveDiagonally.prototype=new JumpPointFinderBase,JPFAlwaysMoveDiagonally.prototype.constructor=JPFAlwaysMoveDiagonally,JPFAlwaysMoveDiagonally.prototype._jump=function(x,y,px,py){var grid=this.grid,dx=x-px,dy=y-py;if(!grid.isWalkableAt(x,y))return null;if(!0===this.trackJumpRecursion&&(grid.getNodeAt(x,y).tested=!0),grid.getNodeAt(x,y)===this.endNode)return[x,y];if(0!==dx&&0!==dy){if(grid.isWalkableAt(x-dx,y+dy)&&!grid.isWalkableAt(x-dx,y)||grid.isWalkableAt(x+dx,y-dy)&&!grid.isWalkableAt(x,y-dy))return[x,y];if(this._jump(x+dx,y,x,y)||this._jump(x,y+dy,x,y))return[x,y]}else if(0!==dx){if(grid.isWalkableAt(x+dx,y+1)&&!grid.isWalkableAt(x,y+1)||grid.isWalkableAt(x+dx,y-1)&&!grid.isWalkableAt(x,y-1))return[x,y]}else if(grid.isWalkableAt(x+1,y+dy)&&!grid.isWalkableAt(x+1,y)||grid.isWalkableAt(x-1,y+dy)&&!grid.isWalkableAt(x-1,y))return[x,y];return this._jump(x+dx,y+dy,x,y)},JPFAlwaysMoveDiagonally.prototype._findNeighbors=function(node){var px,py,dx,dy,neighborNodes,neighborNode,i,l,parent=node.parent,x=node.x,y=node.y,grid=this.grid,neighbors=[];if(parent)px=parent.x,py=parent.y,dx=(x-px)/Math.max(Math.abs(x-px),1),dy=(y-py)/Math.max(Math.abs(y-py),1),0!==dx&&0!==dy?(grid.isWalkableAt(x,y+dy)&&neighbors.push([x,y+dy]),grid.isWalkableAt(x+dx,y)&&neighbors.push([x+dx,y]),grid.isWalkableAt(x+dx,y+dy)&&neighbors.push([x+dx,y+dy]),grid.isWalkableAt(x-dx,y)||neighbors.push([x-dx,y+dy]),grid.isWalkableAt(x,y-dy)||neighbors.push([x+dx,y-dy])):0===dx?(grid.isWalkableAt(x,y+dy)&&neighbors.push([x,y+dy]),grid.isWalkableAt(x+1,y)||neighbors.push([x+1,y+dy]),grid.isWalkableAt(x-1,y)||neighbors.push([x-1,y+dy])):(grid.isWalkableAt(x+dx,y)&&neighbors.push([x+dx,y]),grid.isWalkableAt(x,y+1)||neighbors.push([x+dx,y+1]),grid.isWalkableAt(x,y-1)||neighbors.push([x+dx,y-1]));else for(i=0,l=(neighborNodes=grid.getNeighbors(node,DiagonalMovement.Always)).length;i<l;++i)neighborNode=neighborNodes[i],neighbors.push([neighborNode.x,neighborNode.y]);return neighbors},module.exports=JPFAlwaysMoveDiagonally},{"../core/DiagonalMovement":3,"./JumpPointFinderBase":23}],19:[function(_dereq_,module,exports){var JumpPointFinderBase=_dereq_("./JumpPointFinderBase"),DiagonalMovement=_dereq_("../core/DiagonalMovement");function JPFMoveDiagonallyIfAtMostOneObstacle(opt){JumpPointFinderBase.call(this,opt)}JPFMoveDiagonallyIfAtMostOneObstacle.prototype=new JumpPointFinderBase,JPFMoveDiagonallyIfAtMostOneObstacle.prototype.constructor=JPFMoveDiagonallyIfAtMostOneObstacle,JPFMoveDiagonallyIfAtMostOneObstacle.prototype._jump=function(x,y,px,py){var grid=this.grid,dx=x-px,dy=y-py;if(!grid.isWalkableAt(x,y))return null;if(!0===this.trackJumpRecursion&&(grid.getNodeAt(x,y).tested=!0),grid.getNodeAt(x,y)===this.endNode)return[x,y];if(0!==dx&&0!==dy){if(grid.isWalkableAt(x-dx,y+dy)&&!grid.isWalkableAt(x-dx,y)||grid.isWalkableAt(x+dx,y-dy)&&!grid.isWalkableAt(x,y-dy))return[x,y];if(this._jump(x+dx,y,x,y)||this._jump(x,y+dy,x,y))return[x,y]}else if(0!==dx){if(grid.isWalkableAt(x+dx,y+1)&&!grid.isWalkableAt(x,y+1)||grid.isWalkableAt(x+dx,y-1)&&!grid.isWalkableAt(x,y-1))return[x,y]}else if(grid.isWalkableAt(x+1,y+dy)&&!grid.isWalkableAt(x+1,y)||grid.isWalkableAt(x-1,y+dy)&&!grid.isWalkableAt(x-1,y))return[x,y];return grid.isWalkableAt(x+dx,y)||grid.isWalkableAt(x,y+dy)?this._jump(x+dx,y+dy,x,y):null},JPFMoveDiagonallyIfAtMostOneObstacle.prototype._findNeighbors=function(node){var px,py,dx,dy,neighborNodes,neighborNode,i,l,parent=node.parent,x=node.x,y=node.y,grid=this.grid,neighbors=[];if(parent)px=parent.x,py=parent.y,dx=(x-px)/Math.max(Math.abs(x-px),1),dy=(y-py)/Math.max(Math.abs(y-py),1),0!==dx&&0!==dy?(grid.isWalkableAt(x,y+dy)&&neighbors.push([x,y+dy]),grid.isWalkableAt(x+dx,y)&&neighbors.push([x+dx,y]),(grid.isWalkableAt(x,y+dy)||grid.isWalkableAt(x+dx,y))&&neighbors.push([x+dx,y+dy]),!grid.isWalkableAt(x-dx,y)&&grid.isWalkableAt(x,y+dy)&&neighbors.push([x-dx,y+dy]),!grid.isWalkableAt(x,y-dy)&&grid.isWalkableAt(x+dx,y)&&neighbors.push([x+dx,y-dy])):0===dx?grid.isWalkableAt(x,y+dy)&&(neighbors.push([x,y+dy]),grid.isWalkableAt(x+1,y)||neighbors.push([x+1,y+dy]),grid.isWalkableAt(x-1,y)||neighbors.push([x-1,y+dy])):grid.isWalkableAt(x+dx,y)&&(neighbors.push([x+dx,y]),grid.isWalkableAt(x,y+1)||neighbors.push([x+dx,y+1]),grid.isWalkableAt(x,y-1)||neighbors.push([x+dx,y-1]));else for(i=0,l=(neighborNodes=grid.getNeighbors(node,DiagonalMovement.IfAtMostOneObstacle)).length;i<l;++i)neighborNode=neighborNodes[i],neighbors.push([neighborNode.x,neighborNode.y]);return neighbors},module.exports=JPFMoveDiagonallyIfAtMostOneObstacle},{"../core/DiagonalMovement":3,"./JumpPointFinderBase":23}],20:[function(_dereq_,module,exports){var JumpPointFinderBase=_dereq_("./JumpPointFinderBase"),DiagonalMovement=_dereq_("../core/DiagonalMovement");function JPFMoveDiagonallyIfNoObstacles(opt){JumpPointFinderBase.call(this,opt)}JPFMoveDiagonallyIfNoObstacles.prototype=new JumpPointFinderBase,JPFMoveDiagonallyIfNoObstacles.prototype.constructor=JPFMoveDiagonallyIfNoObstacles,JPFMoveDiagonallyIfNoObstacles.prototype._jump=function(x,y,px,py){var grid=this.grid,dx=x-px,dy=y-py;if(!grid.isWalkableAt(x,y))return null;if(!0===this.trackJumpRecursion&&(grid.getNodeAt(x,y).tested=!0),grid.getNodeAt(x,y)===this.endNode)return[x,y];if(0!==dx&&0!==dy){if(this._jump(x+dx,y,x,y)||this._jump(x,y+dy,x,y))return[x,y]}else if(0!==dx){if(grid.isWalkableAt(x,y-1)&&!grid.isWalkableAt(x-dx,y-1)||grid.isWalkableAt(x,y+1)&&!grid.isWalkableAt(x-dx,y+1))return[x,y]}else if(0!==dy&&(grid.isWalkableAt(x-1,y)&&!grid.isWalkableAt(x-1,y-dy)||grid.isWalkableAt(x+1,y)&&!grid.isWalkableAt(x+1,y-dy)))return[x,y];return grid.isWalkableAt(x+dx,y)&&grid.isWalkableAt(x,y+dy)?this._jump(x+dx,y+dy,x,y):null},JPFMoveDiagonallyIfNoObstacles.prototype._findNeighbors=function(node){var px,py,dx,dy,neighborNodes,neighborNode,i,l,isNextWalkable,parent=node.parent,x=node.x,y=node.y,grid=this.grid,neighbors=[];if(parent){if(px=parent.x,py=parent.y,dx=(x-px)/Math.max(Math.abs(x-px),1),dy=(y-py)/Math.max(Math.abs(y-py),1),0!==dx&&0!==dy)grid.isWalkableAt(x,y+dy)&&neighbors.push([x,y+dy]),grid.isWalkableAt(x+dx,y)&&neighbors.push([x+dx,y]),grid.isWalkableAt(x,y+dy)&&grid.isWalkableAt(x+dx,y)&&neighbors.push([x+dx,y+dy]);else if(0!==dx){isNextWalkable=grid.isWalkableAt(x+dx,y);var isTopWalkable=grid.isWalkableAt(x,y+1),isBottomWalkable=grid.isWalkableAt(x,y-1);isNextWalkable&&(neighbors.push([x+dx,y]),isTopWalkable&&neighbors.push([x+dx,y+1]),isBottomWalkable&&neighbors.push([x+dx,y-1])),isTopWalkable&&neighbors.push([x,y+1]),isBottomWalkable&&neighbors.push([x,y-1])}else if(0!==dy){isNextWalkable=grid.isWalkableAt(x,y+dy);var isRightWalkable=grid.isWalkableAt(x+1,y),isLeftWalkable=grid.isWalkableAt(x-1,y);isNextWalkable&&(neighbors.push([x,y+dy]),isRightWalkable&&neighbors.push([x+1,y+dy]),isLeftWalkable&&neighbors.push([x-1,y+dy])),isRightWalkable&&neighbors.push([x+1,y]),isLeftWalkable&&neighbors.push([x-1,y])}}else for(i=0,l=(neighborNodes=grid.getNeighbors(node,DiagonalMovement.OnlyWhenNoObstacles)).length;i<l;++i)neighborNode=neighborNodes[i],neighbors.push([neighborNode.x,neighborNode.y]);return neighbors},module.exports=JPFMoveDiagonallyIfNoObstacles},{"../core/DiagonalMovement":3,"./JumpPointFinderBase":23}],21:[function(_dereq_,module,exports){var JumpPointFinderBase=_dereq_("./JumpPointFinderBase"),DiagonalMovement=_dereq_("../core/DiagonalMovement");function JPFNeverMoveDiagonally(opt){JumpPointFinderBase.call(this,opt)}JPFNeverMoveDiagonally.prototype=new JumpPointFinderBase,JPFNeverMoveDiagonally.prototype.constructor=JPFNeverMoveDiagonally,JPFNeverMoveDiagonally.prototype._jump=function(x,y,px,py){var grid=this.grid,dx=x-px,dy=y-py;if(!grid.isWalkableAt(x,y))return null;if(!0===this.trackJumpRecursion&&(grid.getNodeAt(x,y).tested=!0),grid.getNodeAt(x,y)===this.endNode)return[x,y];if(0!==dx){if(grid.isWalkableAt(x,y-1)&&!grid.isWalkableAt(x-dx,y-1)||grid.isWalkableAt(x,y+1)&&!grid.isWalkableAt(x-dx,y+1))return[x,y]}else{if(0===dy)throw new Error("Only horizontal and vertical movements are allowed");if(grid.isWalkableAt(x-1,y)&&!grid.isWalkableAt(x-1,y-dy)||grid.isWalkableAt(x+1,y)&&!grid.isWalkableAt(x+1,y-dy))return[x,y];if(this._jump(x+1,y,x,y)||this._jump(x-1,y,x,y))return[x,y]}return this._jump(x+dx,y+dy,x,y)},JPFNeverMoveDiagonally.prototype._findNeighbors=function(node){var px,py,dx,dy,neighborNodes,neighborNode,i,l,parent=node.parent,x=node.x,y=node.y,grid=this.grid,neighbors=[];if(parent)px=parent.x,py=parent.y,dx=(x-px)/Math.max(Math.abs(x-px),1),dy=(y-py)/Math.max(Math.abs(y-py),1),0!==dx?(grid.isWalkableAt(x,y-1)&&neighbors.push([x,y-1]),grid.isWalkableAt(x,y+1)&&neighbors.push([x,y+1]),grid.isWalkableAt(x+dx,y)&&neighbors.push([x+dx,y])):0!==dy&&(grid.isWalkableAt(x-1,y)&&neighbors.push([x-1,y]),grid.isWalkableAt(x+1,y)&&neighbors.push([x+1,y]),grid.isWalkableAt(x,y+dy)&&neighbors.push([x,y+dy]));else for(i=0,l=(neighborNodes=grid.getNeighbors(node,DiagonalMovement.Never)).length;i<l;++i)neighborNode=neighborNodes[i],neighbors.push([neighborNode.x,neighborNode.y]);return neighbors},module.exports=JPFNeverMoveDiagonally},{"../core/DiagonalMovement":3,"./JumpPointFinderBase":23}],22:[function(_dereq_,module,exports){var DiagonalMovement=_dereq_("../core/DiagonalMovement"),JPFNeverMoveDiagonally=_dereq_("./JPFNeverMoveDiagonally"),JPFAlwaysMoveDiagonally=_dereq_("./JPFAlwaysMoveDiagonally"),JPFMoveDiagonallyIfNoObstacles=_dereq_("./JPFMoveDiagonallyIfNoObstacles"),JPFMoveDiagonallyIfAtMostOneObstacle=_dereq_("./JPFMoveDiagonallyIfAtMostOneObstacle");module.exports=function(opt){return(opt=opt||{}).diagonalMovement===DiagonalMovement.Never?new JPFNeverMoveDiagonally(opt):opt.diagonalMovement===DiagonalMovement.Always?new JPFAlwaysMoveDiagonally(opt):opt.diagonalMovement===DiagonalMovement.OnlyWhenNoObstacles?new JPFMoveDiagonallyIfNoObstacles(opt):new JPFMoveDiagonallyIfAtMostOneObstacle(opt)}},{"../core/DiagonalMovement":3,"./JPFAlwaysMoveDiagonally":18,"./JPFMoveDiagonallyIfAtMostOneObstacle":19,"./JPFMoveDiagonallyIfNoObstacles":20,"./JPFNeverMoveDiagonally":21}],23:[function(_dereq_,module,exports){var Heap=_dereq_("heap"),Util=_dereq_("../core/Util"),Heuristic=_dereq_("../core/Heuristic");_dereq_("../core/DiagonalMovement");function JumpPointFinderBase(opt){opt=opt||{},this.heuristic=opt.heuristic||Heuristic.manhattan,this.trackJumpRecursion=opt.trackJumpRecursion||!1}JumpPointFinderBase.prototype.findPath=function(startX,startY,endX,endY,grid){var node,openList=this.openList=new Heap(function(nodeA,nodeB){return nodeA.f-nodeB.f}),startNode=this.startNode=grid.getNodeAt(startX,startY),endNode=this.endNode=grid.getNodeAt(endX,endY);for(this.grid=grid,startNode.g=0,startNode.f=0,openList.push(startNode),startNode.opened=!0;!openList.empty();){if((node=openList.pop()).closed=!0,node===endNode)return Util.expandPath(Util.backtrace(endNode));this._identifySuccessors(node)}return[]},JumpPointFinderBase.prototype._identifySuccessors=function(node){var neighbors,neighbor,jumpPoint,i,l,jx,jy,d,ng,jumpNode,grid=this.grid,heuristic=this.heuristic,openList=this.openList,endX=this.endNode.x,endY=this.endNode.y,x=node.x,y=node.y,abs=Math.abs;Math.max;for(i=0,l=(neighbors=this._findNeighbors(node)).length;i<l;++i)if(neighbor=neighbors[i],jumpPoint=this._jump(neighbor[0],neighbor[1],x,y)){if(jx=jumpPoint[0],jy=jumpPoint[1],(jumpNode=grid.getNodeAt(jx,jy)).closed)continue;d=Heuristic.octile(abs(jx-x),abs(jy-y)),ng=node.g+d,(!jumpNode.opened||ng<jumpNode.g)&&(jumpNode.g=ng,jumpNode.h=jumpNode.h||heuristic(abs(jx-endX),abs(jy-endY)),jumpNode.f=jumpNode.g+jumpNode.h,jumpNode.parent=node,jumpNode.opened?openList.updateItem(jumpNode):(openList.push(jumpNode),jumpNode.opened=!0))}},module.exports=JumpPointFinderBase},{"../core/DiagonalMovement":3,"../core/Heuristic":5,"../core/Util":7,heap:1}]},{},[8])(8)});